//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataFeedsTestClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataFeed", Namespace="http://schemas.datacontract.org/2004/07/DataFeedsService")]
    [System.SerializableAttribute()]
    public partial class DataFeed : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Security.Policy.Url ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] KeywordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Security.Policy.Url LinkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PublishTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Security.Policy.Url Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Keywords {
            get {
                return this.KeywordsField;
            }
            set {
                if ((object.ReferenceEquals(this.KeywordsField, value) != true)) {
                    this.KeywordsField = value;
                    this.RaisePropertyChanged("Keywords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Security.Policy.Url Link {
            get {
                return this.LinkField;
            }
            set {
                if ((object.ReferenceEquals(this.LinkField, value) != true)) {
                    this.LinkField = value;
                    this.RaisePropertyChanged("Link");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PublishTime {
            get {
                return this.PublishTimeField;
            }
            set {
                if ((this.PublishTimeField.Equals(value) != true)) {
                    this.PublishTimeField = value;
                    this.RaisePropertyChanged("PublishTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="URLString", Namespace="http://schemas.datacontract.org/2004/07/System.Security.Util")]
    [System.SerializableAttribute()]
    public partial class URLString : DataFeedsTestClient.ServiceReference1.SiteString {
        
        private DataFeedsTestClient.ServiceReference1.DirectoryString m_directoryField;
        
        private string m_fullurlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool m_isUncShareField;
        
        private DataFeedsTestClient.ServiceReference1.LocalSiteString m_localSiteField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool m_parseDeferredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool m_parsedOriginalField;
        
        private int m_portField;
        
        private string m_protocolField;
        
        private DataFeedsTestClient.ServiceReference1.SiteString m_siteStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_urlOriginalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string m_userpassField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public DataFeedsTestClient.ServiceReference1.DirectoryString m_directory {
            get {
                return this.m_directoryField;
            }
            set {
                if ((object.ReferenceEquals(this.m_directoryField, value) != true)) {
                    this.m_directoryField = value;
                    this.RaisePropertyChanged("m_directory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_fullurl {
            get {
                return this.m_fullurlField;
            }
            set {
                if ((object.ReferenceEquals(this.m_fullurlField, value) != true)) {
                    this.m_fullurlField = value;
                    this.RaisePropertyChanged("m_fullurl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool m_isUncShare {
            get {
                return this.m_isUncShareField;
            }
            set {
                if ((this.m_isUncShareField.Equals(value) != true)) {
                    this.m_isUncShareField = value;
                    this.RaisePropertyChanged("m_isUncShare");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public DataFeedsTestClient.ServiceReference1.LocalSiteString m_localSite {
            get {
                return this.m_localSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.m_localSiteField, value) != true)) {
                    this.m_localSiteField = value;
                    this.RaisePropertyChanged("m_localSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool m_parseDeferred {
            get {
                return this.m_parseDeferredField;
            }
            set {
                if ((this.m_parseDeferredField.Equals(value) != true)) {
                    this.m_parseDeferredField = value;
                    this.RaisePropertyChanged("m_parseDeferred");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool m_parsedOriginal {
            get {
                return this.m_parsedOriginalField;
            }
            set {
                if ((this.m_parsedOriginalField.Equals(value) != true)) {
                    this.m_parsedOriginalField = value;
                    this.RaisePropertyChanged("m_parsedOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int m_port {
            get {
                return this.m_portField;
            }
            set {
                if ((this.m_portField.Equals(value) != true)) {
                    this.m_portField = value;
                    this.RaisePropertyChanged("m_port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_protocol {
            get {
                return this.m_protocolField;
            }
            set {
                if ((object.ReferenceEquals(this.m_protocolField, value) != true)) {
                    this.m_protocolField = value;
                    this.RaisePropertyChanged("m_protocol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public DataFeedsTestClient.ServiceReference1.SiteString m_siteString {
            get {
                return this.m_siteStringField;
            }
            set {
                if ((object.ReferenceEquals(this.m_siteStringField, value) != true)) {
                    this.m_siteStringField = value;
                    this.RaisePropertyChanged("m_siteString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_urlOriginal {
            get {
                return this.m_urlOriginalField;
            }
            set {
                if ((object.ReferenceEquals(this.m_urlOriginalField, value) != true)) {
                    this.m_urlOriginalField = value;
                    this.RaisePropertyChanged("m_urlOriginal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string m_userpass {
            get {
                return this.m_userpassField;
            }
            set {
                if ((object.ReferenceEquals(this.m_userpassField, value) != true)) {
                    this.m_userpassField = value;
                    this.RaisePropertyChanged("m_userpass");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SiteString", Namespace="http://schemas.datacontract.org/2004/07/System.Security.Util")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DataFeedsTestClient.ServiceReference1.DirectoryString))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DataFeedsTestClient.ServiceReference1.LocalSiteString))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DataFeedsTestClient.ServiceReference1.URLString))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DataFeedsTestClient.ServiceReference1.DataFeed[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(DataFeedsTestClient.ServiceReference1.DataFeed))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(object[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Security.Policy.Url))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(System.Security.Policy.EvidenceBase))]
    public partial class SiteString : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private object[] m_separatedSiteField;
        
        private string m_siteField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public object[] m_separatedSite {
            get {
                return this.m_separatedSiteField;
            }
            set {
                if ((object.ReferenceEquals(this.m_separatedSiteField, value) != true)) {
                    this.m_separatedSiteField = value;
                    this.RaisePropertyChanged("m_separatedSite");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string m_site {
            get {
                return this.m_siteField;
            }
            set {
                if ((object.ReferenceEquals(this.m_siteField, value) != true)) {
                    this.m_siteField = value;
                    this.RaisePropertyChanged("m_site");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DirectoryString", Namespace="http://schemas.datacontract.org/2004/07/System.Security.Util")]
    [System.SerializableAttribute()]
    public partial class DirectoryString : DataFeedsTestClient.ServiceReference1.SiteString {
        
        private bool m_checkForIllegalCharsField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool m_checkForIllegalChars {
            get {
                return this.m_checkForIllegalCharsField;
            }
            set {
                if ((this.m_checkForIllegalCharsField.Equals(value) != true)) {
                    this.m_checkForIllegalCharsField = value;
                    this.RaisePropertyChanged("m_checkForIllegalChars");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LocalSiteString", Namespace="http://schemas.datacontract.org/2004/07/System.Security.Util")]
    [System.SerializableAttribute()]
    public partial class LocalSiteString : DataFeedsTestClient.ServiceReference1.SiteString {
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IDataFeeds")]
    public interface IDataFeeds {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataFeeds/GetFeeds", ReplyAction="http://tempuri.org/IDataFeeds/GetFeedsResponse")]
        DataFeedsTestClient.ServiceReference1.DataFeed[] GetFeeds(string topic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IDataFeeds/GetFeeds", ReplyAction="http://tempuri.org/IDataFeeds/GetFeedsResponse")]
        System.Threading.Tasks.Task<DataFeedsTestClient.ServiceReference1.DataFeed[]> GetFeedsAsync(string topic);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataFeedsChannel : DataFeedsTestClient.ServiceReference1.IDataFeeds, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataFeedsClient : System.ServiceModel.ClientBase<DataFeedsTestClient.ServiceReference1.IDataFeeds>, DataFeedsTestClient.ServiceReference1.IDataFeeds {
        
        public DataFeedsClient() {
        }
        
        public DataFeedsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataFeedsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataFeedsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataFeedsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public DataFeedsTestClient.ServiceReference1.DataFeed[] GetFeeds(string topic) {
            return base.Channel.GetFeeds(topic);
        }
        
        public System.Threading.Tasks.Task<DataFeedsTestClient.ServiceReference1.DataFeed[]> GetFeedsAsync(string topic) {
            return base.Channel.GetFeedsAsync(topic);
        }
    }
}
